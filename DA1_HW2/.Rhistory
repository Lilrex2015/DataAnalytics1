M <- matrix(-999:1000, nrow = 20)
View(M)
M <- matrix(-999:1000, nrow = 20)
M_df <- data.frame(M)
length(M_df)
View(M_df)
print a
print(a)
a <- 1+1
print(a)
setwd("L:/UofC/Fall 2022/BTMA 636 - Data Analytics 1/Repo/DataAnalytics1/DA1_HW2")
library('ggplot2')
library('tidyr')
library('dplyr')
load("exam_scores1.rda")
load("exam_scores2.rda")
load("exam_scores3.rda")
load("exam_scores4.rda")
load("exam_scores5.rda")
load("HW2Q4.Rdata")
read.csv("BTMA 636 - 797 (Fall 2022).csv")
EX1DF <-  data.frame(exam_scores1)
EX2DF <-  data.frame(exam_scores2)
EX3DF <-  data.frame(exam_scores3)
EX4DF <-  data.frame(exam_scores4)
EX5DF <-  data.frame(exam_scores5)
Grade_Analyzer <- function(S, R, P, B)
{
PB <- P+B
SB <- S+B
if(S < P)
{
print("The highest possible score you can get is P + B:")
print(PB)
if(R == PB)
{
new_score <-  PB
print("score 1")
return(new_score)
}
else if(R < PB)
{
print("score 2")
return(R)
} #END ELSE IF
else if(R > PB)
{
print("score 3")
return(PB)
}#end Else IF
else
{
print("score 4")
return(R)
}#End Else
} #end IF
if(S == P)
{
if(R == SB)
{
print("score 5")
return(SB)
}  #end IF
else
{
print("score 6")
return(R)
#End Else
}
if(S > P)
{
print("score 7")
return(S)
#end IF
}
}  #end IF
}#End Function
P <- 22
B <- 30
S <- 54
R <- 67
Grade_Analyzer(S,R,P,B)
Grade_Estimator <- function(S,P,B)
{
max_score <- P + B
if(S < P )
{
return(max_score)
}    #end IF
else if(S == P)
{
SB_max_score <- S+B
return(SB_max_score)
}#end Else IF
}#End Function
Grade_Estimator(S, P, B)
student_DF <- data.frame(read.csv("BTMA 636 - 797 (Fall 2022).csv"))
print(student_DF)
student_DF <- tibble::rowid_to_column(student_DF,"Student_ID")
student_DF <- student_DF %>% unite('Full_Name', First.Name:Last.Name, remove = FALSE)
numbers_used <- 1:nrow(student_DF)
print(numbers_used)
RND_Stu_Sel <- function(N, student_DF)
{
#N <- 33
person_selected <-  data.frame(Student_Name = character(0), Student_Id_Number = numeric(0) )
used_numbers <- vector()
if(N < 4)
{
print("This class size is too small. Roster must be 4 or more")
}    #end IF
else{
for (i in 1:N) {
if(i <= N)
{
while (TRUE) {
rng_gg <- sample(numbers_used, 1)
print(rng_gg)
if(!rng_gg %in% used_numbers)
{
break
}#end IF
}
used_numbers <- append(used_numbers,rng_gg)
#print(used_numbers)
print(paste0("Here is a list of the numbers that have already been used ", used_numbers))
name_student <- student_DF$Full_Name[student_DF$Student_ID == rng_gg]
id_student <- student_DF$Student_ID[student_DF$Student_ID == rng_gg]
tempDF <- data.frame(name_student, id_student)
person_selected = rbind(person_selected,tempDF)
print(person_selected)
} #end IF
}#End FOR-Loop
print(used_numbers)
}#End function
}
RND_Stu_Sel(5, student_DF)
class_roster <- data.frame(read.csv("BTMA 636 - 797 (Fall 2022).csv"))
print(class_roster)
class_roster <- tibble::rowid_to_column(class_roster,"Student_ID")
class_roster <- class_roster %>% unite('Full_Name', First.Name:Last.Name, remove = FALSE)
numbers_used_Q3 <- 1:nrow(class_roster)
print(class_roster)
print(numbers_used_Q3)
fullName_df <- data.frame()
Projects_Assignments = data.frame(Marker_ID = 1:nrow(class_roster),
Project_Student_ID_1 = c(nrow(class_roster), 1:(nrow(class_roster)-1)),
Project_Student_ID_2 = c((nrow(class_roster)-1):nrow(class_roster), 1:(nrow(class_roster)-2)),
Project_Student_ID_3 = c((nrow(class_roster)-2):nrow(class_roster), 1:(nrow(class_roster)-3)))
for (i  in 1:length(Projects_Assignments))
{
fullName_df_temp <- data.frame(Marker_Name = class_roster$Full_Name[Projects_Assignments$Marker_ID[i]], Project_Name_1 = class_roster$Full_Name[Projects_Assignments$Project_Student_ID_1[i]],Project_Name_2 = class_roster$Full_Name[Projects_Assignments$Project_Student_ID_2[i]], Project_Name_3 = class_roster$Full_Name[Projects_Assignments$Project_Student_ID_3[i]])
fullName_df <- bind_rows(fullName_df, fullName_df_temp)
}
View(EX5DF)
View(fullName_df_temp)
View(fullName_df)
print(length(Projects_Assignments))
View(Projects_Assignments)
class_roster <- data.frame(read.csv("BTMA 636 - 797 (Fall 2022).csv"))
print(class_roster)
class_roster <- tibble::rowid_to_column(class_roster,"Student_ID")
class_roster <- class_roster %>% unite('Full_Name', First.Name:Last.Name, remove = FALSE)
numbers_used_Q3 <- 1:nrow(class_roster)
print(class_roster)
print(numbers_used_Q3)
fullName_df <- data.frame()
Projects_Assignments = data.frame(Marker_ID = 1:nrow(class_roster),
Project_Student_ID_1 = c(nrow(class_roster), 1:(nrow(class_roster)-1)),
Project_Student_ID_2 = c((nrow(class_roster)-1):nrow(class_roster), 1:(nrow(class_roster)-2)),
Project_Student_ID_3 = c((nrow(class_roster)-2):nrow(class_roster), 1:(nrow(class_roster)-3)))
for (i  in 1:nrow(Projects_Assignments))
{
fullName_df_temp <- data.frame(Marker_Name = class_roster$Full_Name[Projects_Assignments$Marker_ID[i]], Project_Name_1 = class_roster$Full_Name[Projects_Assignments$Project_Student_ID_1[i]],Project_Name_2 = class_roster$Full_Name[Projects_Assignments$Project_Student_ID_2[i]], Project_Name_3 = class_roster$Full_Name[Projects_Assignments$Project_Student_ID_3[i]])
fullName_df <- bind_rows(fullName_df, fullName_df_temp)
}
View(fullName_df)
Q31to3Marker <- function(rosterFile)
{
class_roster <- data.frame(read.csv("BTMA 636 - 797 (Fall 2022).csv"))
print(class_roster)
class_roster <- tibble::rowid_to_column(class_roster,"Student_ID")
class_roster <- class_roster %>% unite('Full_Name', First.Name:Last.Name, remove = FALSE)
numbers_used_Q3 <- 1:nrow(class_roster)
print(class_roster)
print(numbers_used_Q3)
fullName_df <- data.frame()
Projects_Assignments = data.frame(Marker_ID = 1:nrow(class_roster),
Project_Student_ID_1 = c(nrow(class_roster), 1:(nrow(class_roster)-1)),
Project_Student_ID_2 = c((nrow(class_roster)-1):nrow(class_roster), 1:(nrow(class_roster)-2)),
Project_Student_ID_3 = c((nrow(class_roster)-2):nrow(class_roster), 1:(nrow(class_roster)-3)))
for (i  in 1:nrow(Projects_Assignments))
{
fullName_df_temp <- data.frame(Marker_Name = class_roster$Full_Name[Projects_Assignments$Marker_ID[i]], Project_Name_1 = class_roster$Full_Name[Projects_Assignments$Project_Student_ID_1[i]],Project_Name_2 = class_roster$Full_Name[Projects_Assignments$Project_Student_ID_2[i]], Project_Name_3 = class_roster$Full_Name[Projects_Assignments$Project_Student_ID_3[i]])
fullName_df <- bind_rows(fullName_df, fullName_df_temp)
}
}
Q31to3Marker <- function(rosterFile)
{
class_roster <- data.frame(rosterFile)
#class_roster <- data.frame(read.csv("BTMA 636 - 797 (Fall 2022).csv"))
print(class_roster)
class_roster <- tibble::rowid_to_column(class_roster,"Student_ID")
class_roster <- class_roster %>% unite('Full_Name', First.Name:Last.Name, remove = FALSE)
numbers_used_Q3 <- 1:nrow(class_roster)
print(class_roster)
print(numbers_used_Q3)
fullName_df <- data.frame()
Projects_Assignments = data.frame(Marker_ID = 1:nrow(class_roster),
Project_Student_ID_1 = c(nrow(class_roster), 1:(nrow(class_roster)-1)),
Project_Student_ID_2 = c((nrow(class_roster)-1):nrow(class_roster), 1:(nrow(class_roster)-2)),
Project_Student_ID_3 = c((nrow(class_roster)-2):nrow(class_roster), 1:(nrow(class_roster)-3)))
for (i  in 1:nrow(Projects_Assignments))
{
fullName_df_temp <- data.frame(Marker_Name = class_roster$Full_Name[Projects_Assignments$Marker_ID[i]], Project_Name_1 = class_roster$Full_Name[Projects_Assignments$Project_Student_ID_1[i]],Project_Name_2 = class_roster$Full_Name[Projects_Assignments$Project_Student_ID_2[i]], Project_Name_3 = class_roster$Full_Name[Projects_Assignments$Project_Student_ID_3[i]])
fullName_df <- bind_rows(fullName_df, fullName_df_temp)
}
}
Q31to3Marker(rosterFile)
rosterFile <- read.csv("BTMA 636 - 797 (Fall 2022).csv")
Q31to3Marker(rosterFile)
View(fullName_df)
